%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 6cf51161046453c40b9eaf63bfb19050, type: 3}
  m_Name: Quiz_L1030_06
  m_EditorClassIdentifier: 
  question: Why is it important to use private setters for the singleton property?
  optionList:
  - To ensure only the class itself can modify the instance
  - To improve performance
  - To prevent errors during runtime
  - To allow other classes to set the instance
  correctOptionIndex: 0
  answer: A private setter ensures that only the class itself can modify the singleton
    instance, maintaining the integrity of the singleton pattern.
